// Author: Gino Luciano Rojo
#include <bits/stdc++.h>
using namespace std; static double rg(){ static thread_local mt19937_64 R{random_device{}()}; uniform_real_distribution<double>U(0,1); return U(R);} 
static double sg(double k){ static thread_local mt19937_64 R{random_device{}()}; if(k<1){while(true){double u=uniform_real_distribution<double>(0,1)(R),v=uniform_real_distribution<double>(0,1)(R); double x=pow(u,1.0/k),y=pow(v,1.0/(1.0-k)); if(x+y<=1){ return -log(uniform_real_distribution<double>(0,1)(R))*x/(x+y);} }} double d=k-1.0/3.0,c=1.0/sqrt(9*d); normal_distribution<double>N(0,1); for(;;){double z=N(R),u=uniform_real_distribution<double>(0,1)(R),v=pow(1+c*z,3); if(v>0 && log(u)<0.5*z*z + d - d*v + d*log(v)) return d*v; } }
static double sb(double a,double b){ double x=sg(a), y=sg(b); return x/(x+y);}
int main(){cout<<"Bayes A/B by Gino Luciano Rojo\nA: trials succ: ";int nA,sA; if(!(cin>>nA>>sA))return 1; cout<<"B: trials succ: ";int nB,sB; if(!(cin>>nB>>sB))return 1; double aA=1+sA,bA=1+(nA-sA),aB=1+sB,bB=1+(nB-sB); auto mean=[&](double a,double b){return a/(a+b);} ; auto var=[&](double a,double b){return (a*b)/((a+b)*(a+b)*(a+b+1));}; cout.setf(std::ios::fixed); cout<<setprecision(4); auto mA=mean(aA,bA), mB=mean(aB,bB); auto vA=var(aA,bA), vB=var(aB,bB); auto ci=[&](double m,double v){double sd=sqrt(v); return pair<double,double>{m-1.96*sd,m+1.96*sd};}; auto cA=ci(mA,vA), cB=ci(mB,vB); cout<<"A mean="<<mA<<" CI95=["<<cA.first<<","<<cA.second<<"]\n"; cout<<"B mean="<<mB<<" CI95=["<<cB.first<<","<<cB.second<<"]\n"; cout<<"MC samples (default 100000): "; string s; getline(cin,s); getline(cin,s); int N=s.empty()?100000:stoi(s); int win=0; for(int i=0;i<N;++i) if(sb(aB,bB)>sb(aA,bA)) ++win; cout<<"Pr(B>A)â‰ˆ"<<(double)win/N<<"\n"; }
